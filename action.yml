name: 'Release Base Action'
description: 'Github Composite Action for modix base releases'
inputs:
  image:
    description: 'Name for the image'
    required: true
  tag:
    description: 'Tag for the image'
    required: true
  dir:
    description: 'Directory with the Dockerfile and docker context folder to build'
    required: true
  github-token:
    description: 'Github token'
    required: true
    default: ${{ github.token }}
  owner:
    description: 'Repository owner'
    required: true
    default: ${{ github.repository_owner }}
  repository:
    description: 'Github repository'
    required: true
    default: ${{ github.repository }}
  sha:
    description: 'Github SHA'
    required: true
    default: ${{ github.sha }}
  customer-id:
    description: 'AWS Customer ID'
    required: true
    default: '245309753215'
  region:
    description: 'AWS Region'
    required: true
    default: 'eu-central-1'

runs:
  using: 'composite'
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Dockerfile
      uses: zolex/include-action@v2
      id: dockerfile
      with:
        input: ${{ inputs.dir }}/Dockerfile
        output: ${{ inputs.dir }}/Dockerfile.out

    - uses: LouisBrunner/checks-action@v1.2.0
      with:
        token: ${{ inputs.github-token }}
        repo: ${{ inputs.repository }}
        sha: ${{ inputs.sha }}
        name: Build Dockerfile
        status: completed
        conclusion: ${{ steps.dockerfile.outputs.conclusion }}
        output: |
          {"summary": "Dockerfile build status: ${{ steps.dockerfile.outputs.conclusion }}"}
        output_text_description_file: ${{ steps.dockerfile.outputs.dockerfile }}

    - name: Lint Dockerfile
      uses: hadolint/hadolint-action@v1.6.0
      with:
        dockerfile: ${{ inputs.dir }}/Dockerfile.out

    - name: Ensure context
      shell: sh
      run:  mkdir -p ${{ inputs.dir }}/docker

    - name: Set Image Tag
      shell: sh
      run: |
        echo "IMAGE_TAG=${{ inputs.customer-id }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/modix/base/${{ inputs.image }}:${{ inputs.tag }}" >> $GITHUB_ENV

    - name: Build Image
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.dir }}/docker
        file: ${{ inputs.dir }}/Dockerfile.out
        push: false
        tags: ${{ env.IMAGE_TAG }}

    - uses: LouisBrunner/checks-action@v1.2.0
      with:
        token: ${{ inputs.github-token }}
        repo: ${{ inputs.repository }}
        sha: ${{ inputs.sha }}
        name: Build Image
        status: completed
        conclusion: ${{ job.status }}
        output: |
          {
            "summary": "Build status: ${{ job.status }}",
            "text_description": "Image pushed to [${{ env.IMAGE_TAG }}](https://${{ inputs.region }}.console.aws.amazon.com/ecr/repositories/private/${{ inputs.customer-id }}/modix/base/${{ inputs.image }})"
          }
